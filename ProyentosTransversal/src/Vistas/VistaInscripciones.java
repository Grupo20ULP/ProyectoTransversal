/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Modelo.Alumno;
import Modelo.Cursada;
import Modelo.Materia;
import Persistencia.AlumnoData;
import Persistencia.CursadaData;
import Persistencia.MateriaData;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juan
 */
public class VistaInscripciones extends javax.swing.JInternalFrame {
    // Solo tus variables nuevas (Data)

    private CursadaData cursadaData;
    private AlumnoData alumnoData;

    /**
     * Creates new form VistaInscripciones
     */
    public VistaInscripciones() {
        initComponents();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gesti√≥n de Inscripciones");
        // Inicializar Data
        cursadaData = new CursadaData();
        alumnoData = new AlumnoData();
        /*Inicializar los RadioButtons en un ButtonGroup*/
        ButtonGroup grupo = new ButtonGroup();
        grupo.add(jRaBtnInscriptas);
        grupo.add(jRaBtnNoInscripto);
        BtnInscribirse.setEnabled(false);
        btnAnularInscripcion.setEnabled(false);
        // Cargar combo de alumnos
        cargarComboAlumnos();

    }

    private void cargarComboAlumnos() {
        jCBAlumnos.removeAllItems();
        List<Alumno> alumnos = alumnoData.actualizarAlumno(); // trae la lista de alumnos activos
        for (Alumno a : alumnos) {
            jCBAlumnos.addItem(a.getApellido() + ", " + a.getNombre());
        }
    }

    private void cargarMateriasInscriptas() {
        Alumno alumno = obtenerAlumnoSeleccionado();
        if (alumno == null) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblMaterias.getModel();
        model.setRowCount(0);

        List<Cursada> cursadas = cursadaData.obtenerCursadasPorAlumno(alumno.getIdAlumno());
        for (Cursada c : cursadas) {
            model.addRow(new Object[]{c.getMateria().getIdMateria(), c.getMateria().getNombre()});
        }
    }

    private void cargarMateriasNoInscriptas() {
        Alumno alumno = obtenerAlumnoSeleccionado();
        if (alumno == null) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblMaterias.getModel();
        model.setRowCount(0);

        MateriaData md = new MateriaData();
        List<Materia> todasMaterias = md.obtenerMaterias();
        List<Cursada> cursadas = cursadaData.obtenerCursadasPorAlumno(alumno.getIdAlumno());

        for (Materia m : todasMaterias) {
            boolean yaInscriptas = cursadas.stream()
                    .anyMatch(c -> c.getMateria().getIdMateria() == m.getIdMateria());
            if (!yaInscriptas) {
                model.addRow(new Object[]{m.getIdMateria(), m.getNombre()});
            }
        }
    }

    private Alumno obtenerAlumnoSeleccionado() {
        int idx = jCBAlumnos.getSelectedIndex();
        if (idx < 0) {
            return null;
        }
        List<Alumno> alumnos = alumnoData.actualizarAlumno();
        return alumnos.get(idx);
    }


    private void jCBAlumnosItemStateChanged(java.awt.event.ItemEvent evt) {
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jRaBtnInscriptas.isSelected()) {
                cargarMateriasInscriptas();
            } else if (jRaBtnNoInscripto.isSelected()) {
                cargarMateriasNoInscriptas();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCBAlumnos = new javax.swing.JComboBox<>();
        jLTituloForm = new javax.swing.JLabel();
        jLAlu = new javax.swing.JLabel();
        jRaBtnInscriptas = new javax.swing.JRadioButton();
        jRaBtnNoInscripto = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaterias = new javax.swing.JTable();
        BtnInscribirse = new javax.swing.JButton();
        btnAnularInscripcion = new javax.swing.JButton();
        BtnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 400));

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jCBAlumnos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlumnosActionPerformed(evt);
            }
        });

        jLTituloForm.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLTituloForm.setForeground(new java.awt.Color(255, 255, 255));
        jLTituloForm.setText("FORMULARIO DE INCRIPCIONES");

        jLAlu.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLAlu.setForeground(new java.awt.Color(255, 255, 255));
        jLAlu.setText("ALUMNO");

        jRaBtnInscriptas.setForeground(new java.awt.Color(255, 255, 255));
        jRaBtnInscriptas.setText("Inscriptas");
        jRaBtnInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRaBtnInscriptasActionPerformed(evt);
            }
        });

        jRaBtnNoInscripto.setForeground(new java.awt.Color(255, 255, 255));
        jRaBtnNoInscripto.setText("No Inscriptas");
        jRaBtnNoInscripto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRaBtnNoInscriptoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LISTADO DE MATERIAS");

        tblMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMaterias);

        BtnInscribirse.setText("Inscribirse");
        BtnInscribirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInscribirseActionPerformed(evt);
            }
        });

        btnAnularInscripcion.setText("Anular Inscripcion");
        btnAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularInscripcionActionPerformed(evt);
            }
        });

        BtnSalir.setText("Salir");
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCBAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(BtnInscribirse)
                        .addGap(112, 112, 112)
                        .addComponent(btnAnularInscripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnSalir)))
                .addGap(11, 11, 11))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLAlu)
                    .addComponent(jRaBtnInscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRaBtnNoInscripto)
                .addGap(85, 85, 85))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLTituloForm))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLTituloForm)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLAlu))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRaBtnInscriptas)
                    .addComponent(jRaBtnNoInscripto))
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(BtnSalir)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnInscribirse)
                            .addComponent(btnAnularInscripcion))
                        .addGap(22, 22, 22))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRaBtnInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRaBtnInscriptasActionPerformed
        cargarMateriasInscriptas();
        BtnInscribirse.setEnabled(false);
        btnAnularInscripcion.setEnabled(true);
    }//GEN-LAST:event_jRaBtnInscriptasActionPerformed

    private void BtnInscribirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInscribirseActionPerformed
        Alumno alumno = obtenerAlumnoSeleccionado();
        Materia materia = obtenerMateriaSeleccionada();
        if (alumno != null && materia != null) {
            cursadaData.inscribir(alumno, materia);
            cargarMateriasNoInscriptas(); // refresca tabla
        }
    }//GEN-LAST:event_BtnInscribirseActionPerformed

    private void jRaBtnNoInscriptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRaBtnNoInscriptoActionPerformed
        cargarMateriasNoInscriptas();
        BtnInscribirse.setEnabled(true);
        btnAnularInscripcion.setEnabled(false);
    }//GEN-LAST:event_jRaBtnNoInscriptoActionPerformed

    private void btnAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularInscripcionActionPerformed
        Alumno alumno = obtenerAlumnoSeleccionado();
        Materia materia = obtenerMateriaSeleccionada();
        if (alumno != null && materia != null) {
            cursadaData.eliminarCursada(alumno.getIdAlumno(), materia.getIdMateria());
            cargarMateriasInscriptas();
        }
    }//GEN-LAST:event_btnAnularInscripcionActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void jCBAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlumnosActionPerformed
        if (jRaBtnInscriptas.isSelected()) {
            cargarMateriasInscriptas();
        } else if (jRaBtnNoInscripto.isSelected()) {
            cargarMateriasNoInscriptas();
        }
    }//GEN-LAST:event_jCBAlumnosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnInscribirse;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JButton btnAnularInscripcion;
    private javax.swing.JComboBox<String> jCBAlumnos;
    private javax.swing.JLabel jLAlu;
    private javax.swing.JLabel jLTituloForm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRaBtnInscriptas;
    private javax.swing.JRadioButton jRaBtnNoInscripto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMaterias;
    // End of variables declaration//GEN-END:variables

    private Materia obtenerMateriaSeleccionada() {
        int fila = tblMaterias.getSelectedRow(); // fila seleccionada
        if (fila < 0) { // si no seleccion√≥ nada
            return null;
        }

        int id = (int) tblMaterias.getValueAt(fila, 0); // columna 0 = ID
        String nombre = (String) tblMaterias.getValueAt(fila, 1); // columna 1 = nombre

        MateriaData md = new MateriaData();
        Materia m = md.buscarMateriaPorId(id); // trae el objeto Materia completo desde la DB
        return m;
    }
}
