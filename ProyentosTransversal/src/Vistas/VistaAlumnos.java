
package Vistas;

import Modelo.Alumno;
import Persistencia.AlumnoData;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nehuen
 */
public class VistaAlumnos extends javax.swing.JInternalFrame {
    
     // --- LOGICA Y UTILIDADES 
    private final AlumnoData alumnoData = new AlumnoData();
    private final DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    private DefaultTableModel modeloTabla; // se toma del JTable en el constructor
    
        /**
         * Creates new form VistaAlumnos
         */
    public VistaAlumnos() {
        initComponents();
        
        // Propiedades del JInternalFrame
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Alumnos");
        
 
    try {
        modeloTabla = (DefaultTableModel) tbAlumnos.getModel();
    } catch (ClassCastException ex) {
        // Por si NetBeans cambiara el modelo, creamos uno nuevo por las dudas
        modeloTabla = new DefaultTableModel(
            new Object[]{"ID","DNI","Apellido","Nombre","Fecha","Activo"}, 0);
        tbAlumnos.setModel(modeloTabla);
    }
    txId.setEnabled(false);           // el ID no se escribe a mano
    checkbox1.setState(true);         // activo por defecto
    cargarTabla();                    // opcional: listar al abrir
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txId = new java.awt.TextField();
        txtDni = new java.awt.TextField();
        txtApellido = new java.awt.TextField();
        txtNombre = new java.awt.TextField();
        txtFecha = new java.awt.TextField();
        checkbox1 = new java.awt.Checkbox();
        btnNuevo = new java.awt.Button();
        btnGuardar = new java.awt.Button();
        btnBuscar = new java.awt.Button();
        btnActualizar = new java.awt.Button();
        btnBaja = new java.awt.Button();
        btnListar = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAlumnos = new javax.swing.JTable();

        jLabel1.setText("ID:");

        jLabel2.setText("DNI:");

        jLabel3.setText("Apellido:");

        jLabel4.setText("Nombre:");

        jLabel5.setText("Fecha:");

        txtFecha.setName(""); // NOI18N
        txtFecha.setText("(AAAA-MM-DD)");

        checkbox1.setLabel("Activo");

        btnNuevo.setLabel("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setLabel("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setLabel("Buscar ID");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnActualizar.setLabel("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnBaja.setLabel("Baja l√≥gica");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        btnListar.setLabel("Mostrar todos");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        tbAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre", "Fecha", "Activo"
            }
        ));
        jScrollPane1.setViewportView(tbAlumnos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(62, 62, 62)
                                    .addComponent(checkbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(68, 68, 68)
                                    .addComponent(btnBaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txId, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(74, 74, 74)
                                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(22, 22, 22)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 618, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 608, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        // Lee el formulario SIN ID (alta)
        Alumno a = leerFormulario(false);
        if (a != null) {
            // Inserta en la BD
            alumnoData.guardarAlumno(a);
            // Refresca la tabla para ver el nuevo registro
            cargarTabla();
            // Limpia el formulario para el proximo alta
            limpiarCampos();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        // Pide el ID por un cuadro de di√°logo
        String idStr = javax.swing.JOptionPane.showInputDialog(this, "Ingres√° ID de alumno:");
        if (idStr == null || idStr.trim().isEmpty()) return; // Cancel√≥ o vac√≠o

        try {
            int id = Integer.parseInt(idStr.trim());
            // Busca en la BD
            Alumno a = alumnoData.buscarAlumnoPorId(id);
            if (a != null) {
                // Carga los datos encontrados en el formulario
                txId.setText(String.valueOf(a.getIdAlumno()));
                txtDni.setText(String.valueOf(a.getDni()));
                txtApellido.setText(a.getApellido());
                txtNombre.setText(a.getNombre());
                txtFecha.setText(a.getFechaNacimiento().toString()); // yyyy-MM-dd
                checkbox1.setState(a.isEstado());
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontr√≥ el alumno.");
            }
        } catch (NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "ID inv√°lido.");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        // Lee el formulario CON ID (porque vamos a modificar)
        Alumno a = leerFormulario(true);
        if (a != null) {
            // En AlumnoData, el metodo de update se llama "altaLogica(Alumno)"
            alumnoData.altaLogica(a);
            // Refresca la tabla para ver los cambios
            cargarTabla();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        // TODO add your handling code here:
        // Necesitamos el ID para marcar estado=false
        String idTxt = txId.getText().trim();
        if (idTxt.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Primero busca/carga un alumno (ID).");
            return;
        }
        int id = Integer.parseInt(idTxt);

        // Marca baja logica en la BD
        alumnoData.bajaLogica(id);
        // Refresca tabla y limpia formulario
        cargarTabla();
        limpiarCampos();
    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        // Vuelve a cargar todos los alumnos en la tabla
        cargarTabla();
    }//GEN-LAST:event_btnListarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnActualizar;
    private java.awt.Button btnBaja;
    private java.awt.Button btnBuscar;
    private java.awt.Button btnGuardar;
    private java.awt.Button btnListar;
    private java.awt.Button btnNuevo;
    private java.awt.Checkbox checkbox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbAlumnos;
    private java.awt.TextField txId;
    private java.awt.TextField txtApellido;
    private java.awt.TextField txtDni;
    private java.awt.TextField txtFecha;
    private java.awt.TextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        if (modeloTabla == null) {
        modeloTabla = (DefaultTableModel) tbAlumnos.getModel();
    }
    modeloTabla.setRowCount(0);

    // Cambi√° este nombre si tu DAO usa otro para listar
    java.util.List<Alumno> lista = alumnoData.actualizarAlumno();

    for (Alumno a : lista) {
        modeloTabla.addRow(new Object[]{
            a.getIdAlumno(),
            a.getDni(),
            a.getApellido(),
            a.getNombre(),
            a.getFechaNacimiento(), // LocalDate -> toString
            a.isEstado()
        });
    }
    }

    private void limpiarCampos() {
    txId.setText("");
    txtDni.setText("");
    txtApellido.setText("");
    txtNombre.setText("");
    txtFecha.setText("");           // escribir la fecha como yyyy-MM-dd
    checkbox1.setState(true);
    txtDni.requestFocus();
    }    
    
// Este mEtodo lee lo que el usuario escribio en los campos del formulario
// y crea un objeto Alumno con esa informacion.
// Si conId = true, tambien toma el ID (sirve para modificar¬†o¬†borrar)
    private Alumno leerFormulario(boolean conId) {
        // Tomamos el texto de cada campo del formulario
    String dniStr = txtDni.getText().trim();
    String ape    = txtApellido.getText().trim();
    String nom    = txtNombre.getText().trim();
    String f      = txtFecha.getText().trim();
    boolean activo = checkbox1.getState();

    // Si el campo fecha a√∫n tiene el texto de ayuda, lo tratamos como vac√≠o
    if (f.equalsIgnoreCase("(AAAA-MM-DD)")) {
        f = "";
    }

    // Verificamos campos vac√≠os
    if (dniStr.isEmpty() || ape.isEmpty() || nom.isEmpty() || f.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Complet√° todos los campos.");
        return null;
    }

    // Convertimos DNI a n√∫mero
    int dni;
    try {
        dni = Integer.parseInt(dniStr);
    } catch (NumberFormatException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "DNI inv√°lido.");
        return null;
    }

    // Convertimos fecha a LocalDate (yyyy-MM-dd)
    java.time.LocalDate fecha;
    try {
        fecha = java.time.LocalDate.parse(f, fmt);
    } catch (java.time.format.DateTimeParseException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Fecha inv√°lida (usar yyyy-MM-dd).");
        return null;
    }

    // Creamos objeto Alumno
    Alumno a = new Alumno();

    // Si es actualizaci√≥n o baja, tomamos tambi√©n el ID
    if (conId) {
        String idTxt = txId.getText().trim();
        if (idTxt.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Falta el ID para actualizar/baja.");
            return null;
        }
        a.setIdAlumno(Integer.parseInt(idTxt));
}
    
// Asignamos los dem√°s valores
    a.setDni(dni);
    a.setApellido(ape);
    a.setNombre(nom);
    a.setFechaNacimiento(fecha);
    a.setEstado(activo);

    return a;
    }
}